{
	"info": {
		"_postman_id": "a4eed794-80d5-4b75-b1fa-83e03e51c503",
		"name": "Spotify_Browse_endpoints_FAB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Retest - Recomendations_Endpoint",
			"item": [
				{
					"name": "Refresh_token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b06aacd6-e9da-4335-b290-ae63c95da5dc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
									"",
									"pm.test(\"Response is ok, status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "895b7b07-0370-4040-ba35-d78ec97d092e",
								"exec": [
									"console.log('Refresh the TOKEN!');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic OWM3YWUxMWZjZWM3NDZjYTlkNDFmZDg4MGFlYTFmZjA6OTUwNGNmYzUwM2ZkNDA2NWIxNGFiMzBiMmNlZjE0NjI="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{accounts_domain}}/api/token",
							"host": [
								"{{accounts_domain}}"
							],
							"path": [
								"api",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Recomendations_Retesting",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63f7e2ce-ae05-4d08-a280-90406868b67d",
								"exec": [
									"pm.test(\"Response is ok, status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.spotify.com/v1/recommendations?limit=100&seed_artists=7fWgqc4HJi3pcHhK8hKg2p&market=US",
							"protocol": "https",
							"host": [
								"api",
								"spotify",
								"com"
							],
							"path": [
								"v1",
								"recommendations"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "seed_artists",
									"value": "7fWgqc4HJi3pcHhK8hKg2p"
								},
								{
									"key": "market",
									"value": "US"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Refresh_token Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b06aacd6-e9da-4335-b290-ae63c95da5dc",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
							"",
							"pm.test(\"Response is ok, status code 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "895b7b07-0370-4040-ba35-d78ec97d092e",
						"exec": [
							"console.log('Refresh the TOKEN!');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic OWM3YWUxMWZjZWM3NDZjYTlkNDFmZDg4MGFlYTFmZjA6OTUwNGNmYzUwM2ZkNDA2NWIxNGFiMzBiMmNlZjE0NjI=",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "refresh_token",
							"type": "text"
						},
						{
							"key": "refresh_token",
							"value": "{{refresh_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{accounts_domain}}/api/token",
					"host": [
						"{{accounts_domain}}"
					],
					"path": [
						"api",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of new releases_Positive_BVA_50_limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63f7e2ce-ae05-4d08-a280-90406868b67d",
						"exec": [
							"pm.test(\"Response is ok, status code 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//pm.environment.get(Json_schema_for_new_release)",
							"var json_sch ={",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"$id\": \"http://example.com/root.json\",",
							"  \"type\": \"object\",",
							"  \"title\": \"The Root Schema\",",
							"  \"required\": [",
							"    \"categories\"",
							"  ],",
							"  \"properties\": {",
							"    \"categories\": {",
							"      \"$id\": \"#/properties/categories\",",
							"      \"type\": \"object\",",
							"      \"title\": \"The Categories Schema\",",
							"      \"required\": [",
							"        \"href\",",
							"        \"items\",",
							"        \"limit\",",
							"        \"next\",",
							"        \"offset\",",
							"        \"previous\",",
							"        \"total\"",
							"      ],",
							"      \"properties\": {",
							"        \"href\": {",
							"          \"$id\": \"#/properties/categories/properties/href\",",
							"          \"type\": \"string\",",
							"          \"title\": \"The Href Schema\",",
							"          \"default\": \"\",",
							"          \"examples\": [",
							"            \"https://api.spotify.com/v1/browse/categories?country=RO&offset=0&limit=50\"",
							"          ],",
							"          \"pattern\": \"^(.*)$\"",
							"        },",
							"        \"items\": {",
							"          \"$id\": \"#/properties/categories/properties/items\",",
							"          \"type\": \"array\",",
							"          \"title\": \"The Items Schema\",",
							"          \"items\": {",
							"            \"$id\": \"#/properties/categories/properties/items/items\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The Items Schema\",",
							"            \"required\": [",
							"              \"href\",",
							"              \"icons\",",
							"              \"id\",",
							"              \"name\"",
							"            ],",
							"            \"properties\": {",
							"              \"href\": {",
							"                \"$id\": \"#/properties/categories/properties/items/items/properties/href\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Href Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"https://api.spotify.com/v1/browse/categories/toplists\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              },",
							"              \"icons\": {",
							"                \"$id\": \"#/properties/categories/properties/items/items/properties/icons\",",
							"                \"type\": \"array\",",
							"                \"title\": \"The Icons Schema\",",
							"                \"items\": {",
							"                  \"$id\": \"#/properties/categories/properties/items/items/properties/icons/items\",",
							"                  \"type\": \"object\",",
							"                  \"title\": \"The Items Schema\",",
							"                  \"required\": [",
							"                    \"height\",",
							"                    \"url\",",
							"                    \"width\"",
							"                  ],",
							"                  \"properties\": {",
							"                    \"height\": {",
							"                      \"$id\": \"#/properties/categories/properties/items/items/properties/icons/items/properties/height\",",
							"                      \"type\": \"integer\",",
							"                      \"title\": \"The Height Schema\",",
							"                      \"default\": 0,",
							"                      \"examples\": [",
							"                        275",
							"                      ]",
							"                    },",
							"                    \"url\": {",
							"                      \"$id\": \"#/properties/categories/properties/items/items/properties/icons/items/properties/url\",",
							"                      \"type\": \"string\",",
							"                      \"title\": \"The Url Schema\",",
							"                      \"default\": \"\",",
							"                      \"examples\": [",
							"                        \"https://t.scdn.co/media/derived/toplists_11160599e6a04ac5d6f2757f5511778f_0_0_275_275.jpg\"",
							"                      ],",
							"                      \"pattern\": \"^(.*)$\"",
							"                    },",
							"                    \"width\": {",
							"                      \"$id\": \"#/properties/categories/properties/items/items/properties/icons/items/properties/width\",",
							"                      \"type\": \"integer\",",
							"                      \"title\": \"The Width Schema\",",
							"                      \"default\": 0,",
							"                      \"examples\": [",
							"                        275",
							"                      ]",
							"                    }",
							"                  }",
							"                }",
							"              },",
							"              \"id\": {",
							"                \"$id\": \"#/properties/categories/properties/items/items/properties/id\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Id Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"toplists\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              },",
							"              \"name\": {",
							"                \"$id\": \"#/properties/categories/properties/items/items/properties/name\",",
							"                \"type\": \"string\",",
							"                \"title\": \"The Name Schema\",",
							"                \"default\": \"\",",
							"                \"examples\": [",
							"                  \"Top Lists\"",
							"                ],",
							"                \"pattern\": \"^(.*)$\"",
							"              }",
							"            }",
							"          }",
							"        },",
							"        \"limit\": {",
							"          \"$id\": \"#/properties/categories/properties/limit\",",
							"          \"type\": \"integer\",",
							"          \"title\": \"The Limit Schema\",",
							"          \"default\": 0,",
							"          \"examples\": [",
							"            50",
							"          ]",
							"        },",
							"        \"next\": {",
							"          \"$id\": \"#/properties/categories/properties/next\",",
							"          \"type\": \"null\",",
							"          \"title\": \"The Next Schema\",",
							"          \"default\": null,",
							"          \"examples\": [",
							"            null",
							"          ]",
							"        },",
							"        \"offset\": {",
							"          \"$id\": \"#/properties/categories/properties/offset\",",
							"          \"type\": \"integer\",",
							"          \"title\": \"The Offset Schema\",",
							"          \"default\": 0,",
							"          \"examples\": [",
							"            0",
							"          ]",
							"        },",
							"        \"previous\": {",
							"          \"$id\": \"#/properties/categories/properties/previous\",",
							"          \"type\": \"null\",",
							"          \"title\": \"The Previous Schema\",",
							"          \"default\": null,",
							"          \"examples\": [",
							"            null",
							"          ]",
							"        },",
							"        \"total\": {",
							"          \"$id\": \"#/properties/categories/properties/total\",",
							"          \"type\": \"integer\",",
							"          \"title\": \"The Total Schema\",",
							"          \"default\": 0,",
							"          \"examples\": [",
							"            35",
							"          ]",
							"        }",
							"      }",
							"    }",
							"  }",
							"};",
							"// console.log(\"Type of var: \" + typeof(json_sch));",
							"// console.log(Object.prototype.toString.call(json_sch));",
							"postman.setEnvironmentVariable(\"json_schema_for_new_release\",json_sch);",
							"var resp = JSON.parse(responseBody);",
							"var valid = tv4.validateResult(resp,pm.variables.get(\"json_schema_for_new_release\"),false,true);",
							"pm.test(\"The schema is valid.\", function(){",
							"        pm.expect(valid.valid).to.be.true;",
							"    }",
							");",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.spotify.com/v1/browse/categories?country=RO&limit=50",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"browse",
						"categories"
					],
					"query": [
						{
							"key": "country",
							"value": "RO"
						},
						{
							"key": "limit",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of new releases_Negative_BVA_51_limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63f7e2ce-ae05-4d08-a280-90406868b67d",
						"exec": [
							"pm.test(\"Response is ok, status code 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"var resp_body=JSON.parse(responseBody);",
							"pm.test(\"Response URL correctly throws the error\", function() {",
							"    pm.expect(resp_body.error.message).to.eql(\"Invalid limit\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.spotify.com/v1/browse/categories?country=RO&limit=51",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"browse",
						"categories"
					],
					"query": [
						{
							"key": "country",
							"value": "RO"
						},
						{
							"key": "limit",
							"value": "51"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of categories_Positive_BVA_50_limit Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63f7e2ce-ae05-4d08-a280-90406868b67d",
						"exec": [
							"pm.test(\"Response is ok, status code 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.spotify.com/v1/browse/categories?country=RO&locale=ro_EN&limit=50",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"browse",
						"categories"
					],
					"query": [
						{
							"key": "country",
							"value": "RO"
						},
						{
							"key": "locale",
							"value": "ro_EN"
						},
						{
							"key": "limit",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a list of categories Negative-BVA_Above_50_Limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63f7e2ce-ae05-4d08-a280-90406868b67d",
						"exec": [
							"pm.test(\"Response is ok, status code 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"var resp_body=JSON.parse(responseBody);",
							"pm.test(\"Response URL correctly throws the error\", function() {",
							"    pm.expect(resp_body.error.message).to.eql(\"Invalid limit\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.spotify.com/v1/browse/categories?country=RO&locale=ro_EN&limit=51",
					"protocol": "https",
					"host": [
						"api",
						"spotify",
						"com"
					],
					"path": [
						"v1",
						"browse",
						"categories"
					],
					"query": [
						{
							"key": "country",
							"value": "RO"
						},
						{
							"key": "locale",
							"value": "ro_EN"
						},
						{
							"key": "limit",
							"value": "51"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}