{
	"info": {
		"_postman_id": "71340576-bc77-431b-95ab-5eed4b6fb518",
		"name": "Get the CODE, the TOKEN and the REFRESH TOKEN",
		"description": "Get the CODE needed to generate the TOKEN and the REFRESH TOKEN in order to be able to make requests to the api domain.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Code",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b33843f0-3fd3-4759-a488-b977f7f4ff22",
						"exec": [
							"console.log('Get CODE needed to generate TOKEN and REFRESH_TOKEN');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a82701fa-b03c-42e1-a0ff-e96ed9e10974",
						"exec": [
							"var locationParameterInResponseHeader = postman.getResponseHeader(\"Location\");",
							"var codePosition = locationParameterInResponseHeader.indexOf(\"code\");",
							"var sliceFromCode = locationParameterInResponseHeader.slice((codePosition+5),locationParameterInResponseHeader.length);",
							"var otherParameters = sliceFromCode.indexOf(\"&\");",
							"",
							"// console.log(locationParameterInResponseHeader);",
							"// console.log(codePosition);",
							"// console.log(sliceFromCode);",
							"// console.log(otherParameters);",
							"",
							"if (otherParameters == -1){",
							"postman.setEnvironmentVariable(\"code\", sliceFromCode);",
							"//console.log(\"CODE is the last element in the URL\");",
							"}",
							"else {",
							"    postman.setEnvironmentVariable(\"code\",sliceFromCode.slice(0,otherParameters));",
							"    //console.log(\"CODE is NOT the last element in the URL\");",
							"}",
							"",
							"console.log(pm.variables.get(\"code\"));",
							"pm.test(\"Response is ok, status code 302\", function () {",
							"    pm.response.to.have.status(302);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"followRedirects": false,
				"followAuthorizationHeader": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{accounts_domain}}/authorize?client_id={{client_id}}&response_type=code&redirect_uri={{redirect_uri}}&state={{state}}&scope={{scopes}}&show_dialog=false",
					"host": [
						"{{accounts_domain}}"
					],
					"path": [
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "response_type",
							"value": "code"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirect_uri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "show_dialog",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token and Refresh_token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4b9d836a-ad28-43d7-86a9-879aedc49100",
						"exec": [
							"console.log('Get the TOKEN and the REFRESH_TOKEN!');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "46cc6139-0902-474d-826a-bb71f75117cc",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
							"postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"",
							"//console.log(jsonData.access_token);",
							"//console.log(jsonData.refresh_token);",
							"",
							"pm.test(\"Response is ok, status code 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{code}}",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "https://www.getpostman.com/oauth2/callback",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{accounts_domain}}/api/token",
					"host": [
						"{{accounts_domain}}"
					],
					"path": [
						"api",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}